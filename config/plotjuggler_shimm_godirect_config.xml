<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget parent="main_window" name="Main Window">
  <Tab containers="1" tab_name="Raw Data">
   <Container>
    <DockSplitter count="4" orientation="-" sizes="0.250526;0.249474;0.250526;0.249474">
     <DockArea name="Grip Force (N)">
      <plot style="LinesAndDots" mode="TimeSeries" flip_y="false" flip_x="false">
       <range left="1657796021.505581" bottom="-7.566429" right="1657796069.916022" top="389.284401"/>
       <limitY/>
       <curve name="/gdx/grip_force_stream/grip_force" color="#f14cc1"/>
      </plot>
     </DockArea>
     <DockArea name="EMG  - Clean (mV)">
      <plot style="LinesAndDots" mode="TimeSeries" flip_y="false" flip_x="false">
       <range left="1657796021.016910" bottom="-0.001577" right="1657796069.445377" top="0.213809"/>
       <limitY/>
       <curve name="/shimmer0/clean_emg_stream/emg_ch1" color="#9467bd"/>
      </plot>
     </DockArea>
     <DockArea name="FFT">
      <plot style="Sticks" mode="XYPlot" flip_y="false" flip_x="false">
       <range left="-12.412500" bottom="-0.198481" right="508.912500" top="8.137708"/>
       <limitY/>
       <curve name="FFT" color="#ff7f0e"/>
      </plot>
     </DockArea>
     <DockArea name="EMG (mV)">
      <plot style="Lines" mode="TimeSeries" flip_y="false" flip_x="false">
       <range left="1657796021.422763" bottom="-5.518797" right="1657796069.936832" top="-3.421745"/>
       <limitY/>
       <curve name="/shimmer0/emg_stream/emg_ch1" color="#17becf"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="0"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <default time_axis="" delimiter="0"/>
  </plugin>
  <plugin ID="DataLoad ROS bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="false"/>
   <remove_suffix_from_strings value="false"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS Topic Subscriber">
   <use_header_stamp value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="1000"/>
   <boolean_strings_to_number value="false"/>
   <remove_suffix_from_strings value="false"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indeces, not Lua indeces&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts>
    <script global="new_series = ScatterXY.new(&quot;FFT&quot;)" function="new_series:clear()&#xa;index = 0&#xa;while(true) do&#xa;  str_y = string.format(&quot;/shimmer0/fft_emg_stream/amp_emg_ch1.%d&quot;, index)&#xa;  str_x = string.format(&quot;/shimmer0/fft_emg_stream/fft_freqs.%d&quot;, index)&#xa;  series_y = TimeseriesView.find( str_y )&#xa;  series_x = TimeseriesView.find( str_x )&#xa;  if series_y == nil then break end&#x9; &#xa; &#xa;  y = series_y:atTime(tracker_time)&#xa;  x = series_x:atTime(tracker_time)&#xa;  new_series:push_back(x, y)&#xa;&#xa;  index = index + 1&#xa;end" name="FFT"/>
   </scripts>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS /rosout Visualization"/>
  <plugin ID="ROS Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

